spring.application.name=restaurant_reservation

# Database cionfiguration
spring.datasource.url=jdbc:postgresql://localhost:5432/restaurant_db
spring.datasource.username=postgres
spring.datasource.password=123456ab
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Endpoint path
server.servlet.context-path=/api/v1


# jwt
jwt.secret=chLhMF9w3mwDutysbQxsX8x4CGwZef4mayTGSmbAG2BUsXbYFKvXrVfnPCa62PJxp9TuHxx4PQAS2yGUTBAPy3Dy53j8Uj2wb2AQ3nK8VLg7tUx9HCzHATEp
jwt.validity-in-seconds=2592000

helier.openapi.dev-url=http://localhost:8080/api/v1
helier.openapi.prod-url=https://restaurant-reservation-api-kv05.onrender.com/api/v1

# paypal
paypal.client-id=AfElOBbPKVLlgMj3E4w-aLbqCyJ4azwgUO7g4pp9NaqAIAAF-Txnq6Rw0ULiAMlm7MRO4naqce9336yu
paypal.client-secret=EJLuLCghke9s0VsajDhlFR999NInomQHn2bM9WhFSDKPNlSTloxHRIvVyKbs8teexO-xigEejmyBbzHI
paypal.api-base=https://sandbox.paypal.com